FROM nvcr.io/nvidia/isaac-sim:2023.1.1 AS isaac-sim
FROM osrf/space-ros:latest

# copy Isaac Sim into the base image
ARG ISAAC_SIM_PATH="/isaac-sim"
ENV ISAAC_SIM_PYTHON="${ISAAC_SIM_PATH}/python.sh"
COPY --from=isaac-sim --chown=${USERNAME}:${USERNAME} /isaac-sim "${ISAAC_SIM_PATH}"
COPY --from=isaac-sim --chown=${USERNAME}:${USERNAME} /root/.nvidia-omniverse/config "${HOME_DIR}/.nvidia-omniverse/config"
COPY --from=isaac-sim /etc/vulkan/icd.d/nvidia_icd.json /etc/vulkan/icd.d/nvidia_icd.json

RUN ${ISAAC_SIM_PYTHON} -m pip install opencv-python omegaconf hydra-core

# setup timezone
RUN echo 'Etc/UTC' | sudo tee /etc/timezone && \
    sudo ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    sudo apt-get update && \
    sudo apt-get install -q -y --no-install-recommends tzdata apt-utils && \
    sudo rm -rf /var/lib/apt/lists/*

# install packages
RUN sudo apt-get update && sudo apt-get install -q -y \
    dirmngr \
    gnupg2 \
    curl \
    libglib2.0-0 \
    && sudo rm -rf /var/lib/apt/lists/*

# setup keys
RUN sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

ENV ROS_DISTRO humble

# install ros2 packages
RUN sudo apt-get update && sudo apt-get install -y \
    ros-humble-ros-core=0.10.0-1* \
    gdal-bin \
    libgdal-dev \
    ros-humble-vision-msgs \
    ros-humble-tf2-msgs \
    g++ \
    wget \
    && sudo rm -rf /var/lib/apt/lists/*

# install Isaac Sim dependencies
RUN sudo apt-get update && \
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -yq --no-install-recommends \
    libgl1 \
    libglu1 \
    libxt-dev \
    ffmpeg && \
    sudo rm -rf /var/lib/apt/lists/*

RUN ${ISAAC_SIM_PYTHON} -m pip install skyfield zfpy numba gdown
RUN ${ISAAC_SIM_PYTHON} -m pip install gdal==$(gdal-config --version)

# isaac ros2_bridge config
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/isaac-sim/exts/omni.isaac.ros2_bridge/humble/lib
ENV RMW_IMPLEMENTATION=rmw_fastrtps_cpp

# setup entrypoint
COPY ./entrypoint.sh /

ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]
